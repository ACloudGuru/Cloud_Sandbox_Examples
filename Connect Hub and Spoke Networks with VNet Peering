{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "osVersion": "2019-Datacenter-smalldisk",
        "storageAccountName": "[toLower( concat( 'azurelalab', uniqueString(resourceGroup().id) ))]",
        "networkSecurityGroupName": "shared-nsg",
        "vNet1": {
            "name": "hub-vnet",
            "addressSpacePrefix": "10.100.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "10.100.1.0/24",
            "nsgName": "hub-vnet-nsg"
        },
        "vNet2": {
            "name": "spoke1-vnet",
            "addressSpacePrefix": "10.1.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "10.1.1.0/24",
            "nsgName": "spoke1-vnet-nsg"          
        },
        "vm1": {
            "name": "appserver",
            "vmSize": "Standard_B1ms",
            "nicName": "appserver-nic1"
        },
        "vm2": {
            "name": "jumpserver",
            "vmSize": "Standard_B1ms",
            "nicName": "jumpserver-nic1"
        }      
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vNet1').nsgName]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "deny-vnet-inbound",
                        "properties": {
                            "description": "Override the default allow rule - block default connectivity from VNets.",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },      
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vNet2').nsgName]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [ ]
            }
        },                           
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet1').name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vNet1').nsgName)]"
            ],            
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vNet1').nsgName)]"
                            }                            
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet2').name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vNet2').nsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet2').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vNet2').nsgName)]"
                            }                            
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
              "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
          },

        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1').nicName]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet1').name)]"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1').name, variables('vnet1').subnetName)]"
                    }
                  }
                }
              ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2').nicName]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet2').name)]"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet2').name, variables('vnet2').subnetName)]"
                    }
                  }
                }
              ]
            }
        },

        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm1').name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
              "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1').nicName)]"
            ],
            "properties": {
              "hardwareProfile": {
                "vmSize": "[variables('vm1').vmSize]"
              },
              "osProfile": {
                "computerName": "[variables('vm1').name]"
              },
              "storageProfile": {
                "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[variables('osVersion')]",
                  "version": "latest"
                },
                "osDisk": {
                  "createOption": "FromImage"
                }
              },
              "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm1').nicName)]"
                  }
                ]
              },
              "diagnosticsProfile": {
                "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                }
              }
            }
          },
          {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm2').name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
              "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm2').nicName)]"
            ],
            "properties": {
              "hardwareProfile": {
                "vmSize": "[variables('vm2').vmSize]"
              },
              "osProfile": {
                "computerName": "[variables('vm2').name]"
              },
              "storageProfile": {
                "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[variables('osVersion')]",
                  "version": "latest"
                },
                "osDisk": {
                  "createOption": "FromImage"
                }
              },
              "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm2').nicName)]"
                  }
                ]
              },
              "diagnosticsProfile": {
                "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                }
              }
            }
        }
        
    ],
}
